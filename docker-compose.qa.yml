services:
  # QA용 Spring Boot 애플리케이션
  pullit-qa-app:
    image: ${DOCKER_IMAGE}
    container_name: pullit-qa-app
    restart: unless-stopped
    ports:
      - "127.0.0.1:8080:8080"  # Nginx 리버스 프록시만 접근 (외부 비공개)
    environment:
      # 데이터베이스 연결 설정
      - DB_URL=jdbc:mariadb://pullit-qa-db:3306/pullit_qa?createDatabaseIfNotExist=true&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
      - DB_USERNAME=${QA_DB_USERNAME}
      - DB_PASSWORD=${QA_DB_PASSWORD}
      # Spring 프로필
      - SPRING_PROFILES_ACTIVE=qa
      # 외부 서비스 API 키 (CD 파이프라인에서 주입)
      - KAKAO_REST_API_KEY=${QA_KAKAO_REST_API_KEY}
      - GOOGLE_API_KEY=${QA_GOOGLE_API_KEY}
      - S3_ACCESS_KEY=${QA_S3_ACCESS_KEY}
      - S3_SECRET_KEY=${QA_S3_SECRET_KEY}
      - AWS_REGION=${AWS_REGION}
      # JVM 옵션 (메모리 최적화)
      - JAVA_OPTS=-Xmx512m -Xms256m
    depends_on:
      pullit-qa-db:
        condition: service_healthy
    networks:
      - pullit-qa-network
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # QA용 MariaDB 데이터베이스
  pullit-qa-db:
    image: mariadb:10.11
    container_name: pullit-qa-db
    restart: unless-stopped
    environment:
      - MARIADB_DATABASE=pullit_qa
      - MARIADB_USER=${QA_DB_USERNAME}
      - MARIADB_PASSWORD=${QA_DB_PASSWORD}
      - MARIADB_ROOT_PASSWORD=${QA_DB_ROOT_PASSWORD}
      - MARIADB_CHARSET=utf8mb4
      - MARIADB_COLLATION=utf8mb4_unicode_ci
    ports:
      - "3306:3306"
    volumes:
      - pullit_qa_data:/var/lib/mysql
      - ./db/init:/docker-entrypoint-initdb.d
    networks:
      - pullit-qa-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASSWORD}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --default-time-zone=+09:00

volumes:
  pullit_qa_data:
    driver: local

networks:
  pullit-qa-network:
    driver: bridge
