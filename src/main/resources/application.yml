spring:
  application:
    name: pullit

  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://localhost:3306/mydatabase?createDatabaseIfNotExist=true&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    username: myuser
    password: secret
    hikari:
      # HikariCP 공식 가이드: connections = ((core_count * 2) + effective_spindle_count)
      # - core_count: 물리적 CPU 코어 수
      # - effective_spindle_count: 디스크 수 (1-4개)
      maximum-pool-size: 10          # 기본값: 10 (4코어 기준: ((4*2)+2)=10)
      minimum-idle: 10               # maximum-pool-size와 동일하게 설정 (고정 풀 크기)
      connection-timeout: 30000      # 기본값: 30초
      idle-timeout: 600000           # 기본값: 10분
      max-lifetime: 1800000          # 기본값: 30분

  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        format_sql: true
        show_sql: true

  flyway:
    enabled: false

  liquibase:
    enabled: false

  # 로컬 개발용 기본 사용자 (프로덕션에서는 제거하고 환경변수 사용)
  security:
    user:
      name: pullit
      password: pullit

  # Spring Boot DevTools 설정
  devtools:
    restart:
      enabled: true
      additional-paths:
        - "src/main/java"
      additional-exclude: "static/**,public/**"
      # 변경 감지 간격을 1초로 설정 (기본값: 1초)
      poll-interval: 1000ms
      # 재시작 전 대기 시간 (기본값: 400ms)
      quiet-period: 400ms
      # 재시작 트리거 파일 지정
      trigger-file: ".reloadtrigger"
    livereload:
      enabled: true
      # 라이브 리로드 포트 지정 (기본값: 35729)
      port: 35729

server:
  error:
    whitelabel:
      enabled: false
    include-exception: true
    # TODO : 운영에서 전체 트레이스 포함할지
    include-stacktrace: ALWAYS

info:
  app:
    name: Pullit Local Development
    description: Pullit 스터디 플랫폼 로컬 개발 환경

logging:
  level:
    ROOT: DEBUG
    java.lang.ProcessBuilder: INFO
    sun.rmi.loader: WARN
    sun.rmi.transport.tcp: WARN
    javax.management.remote.rmi: WARN

# 로컬 개발용 기본 사용자 (프로덕션에서는 제거하고 환경변수 사용)

management:
  endpoints:
    web:
      exposure:
        include: "*"  # 모든 엔드포인트 노출
  endpoint:
    health:
      show-details: always

# =================================================================================================
# Pullit 커스텀 설정
# =================================================================================================
pullit:
  async:
    io:
      # I/O-bound 비동기 작업 스레드 풀 설정
      target-cpu-utilization: 0.3    # 목표 CPU 사용률 (30%)
      blocking-coefficient: 0.9       # I/O 대기 계수 (90% I/O 대기)

cors:
  allowed-origins:
    - ${ACCESS_CONTROL_ALLOWED_ORIGINS:http://localhost:3000}
  # CORS 캐시 시간 (초 단위) - 개발: 5분, 운영: 1시간
  max-age-seconds: ${CORS_MAX_AGE_SECONDS:3600}

oauth:
  kakao:
    client-id: ${KAKAO_CLIENT_ID:}
    client-secret: ${KAKAO_CLIENT_SECRET:}
    redirect-uri: ${KAKAO_REDIRECT_URI:}
    kauth-url: "https://kauth.kakao.com"
    authorize-path: "/oauth/authorize"
    token-path: "/oauth/token"
    user-info-path: "/v2/user/me"

app:
  base-url: ${BASE_URL:}
